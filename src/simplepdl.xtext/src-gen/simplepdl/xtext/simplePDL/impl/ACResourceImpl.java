/**
 * generated by Xtext 2.36.0
 */
package simplepdl.xtext.simplePDL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import simplepdl.xtext.simplePDL.ACResource;
import simplepdl.xtext.simplePDL.Resource;
import simplepdl.xtext.simplePDL.SimplePDLPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>AC Resource</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link simplepdl.xtext.simplePDL.impl.ACResourceImpl#getResource <em>Resource</em>}</li>
 *   <li>{@link simplepdl.xtext.simplePDL.impl.ACResourceImpl#getResourceQuantity <em>Resource Quantity</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ACResourceImpl extends MinimalEObjectImpl.Container implements ACResource
{
  /**
   * The cached value of the '{@link #getResource() <em>Resource</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResource()
   * @generated
   * @ordered
   */
  protected Resource resource;

  /**
   * The default value of the '{@link #getResourceQuantity() <em>Resource Quantity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResourceQuantity()
   * @generated
   * @ordered
   */
  protected static final int RESOURCE_QUANTITY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getResourceQuantity() <em>Resource Quantity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getResourceQuantity()
   * @generated
   * @ordered
   */
  protected int resourceQuantity = RESOURCE_QUANTITY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ACResourceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SimplePDLPackage.Literals.AC_RESOURCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Resource getResource()
  {
    if (resource != null && resource.eIsProxy())
    {
      InternalEObject oldResource = (InternalEObject)resource;
      resource = (Resource)eResolveProxy(oldResource);
      if (resource != oldResource)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SimplePDLPackage.AC_RESOURCE__RESOURCE, oldResource, resource));
      }
    }
    return resource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Resource basicGetResource()
  {
    return resource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResource(Resource newResource)
  {
    Resource oldResource = resource;
    resource = newResource;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimplePDLPackage.AC_RESOURCE__RESOURCE, oldResource, resource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getResourceQuantity()
  {
    return resourceQuantity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setResourceQuantity(int newResourceQuantity)
  {
    int oldResourceQuantity = resourceQuantity;
    resourceQuantity = newResourceQuantity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SimplePDLPackage.AC_RESOURCE__RESOURCE_QUANTITY, oldResourceQuantity, resourceQuantity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SimplePDLPackage.AC_RESOURCE__RESOURCE:
        if (resolve) return getResource();
        return basicGetResource();
      case SimplePDLPackage.AC_RESOURCE__RESOURCE_QUANTITY:
        return getResourceQuantity();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SimplePDLPackage.AC_RESOURCE__RESOURCE:
        setResource((Resource)newValue);
        return;
      case SimplePDLPackage.AC_RESOURCE__RESOURCE_QUANTITY:
        setResourceQuantity((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SimplePDLPackage.AC_RESOURCE__RESOURCE:
        setResource((Resource)null);
        return;
      case SimplePDLPackage.AC_RESOURCE__RESOURCE_QUANTITY:
        setResourceQuantity(RESOURCE_QUANTITY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SimplePDLPackage.AC_RESOURCE__RESOURCE:
        return resource != null;
      case SimplePDLPackage.AC_RESOURCE__RESOURCE_QUANTITY:
        return resourceQuantity != RESOURCE_QUANTITY_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (resourceQuantity: ");
    result.append(resourceQuantity);
    result.append(')');
    return result.toString();
  }

} //ACResourceImpl
