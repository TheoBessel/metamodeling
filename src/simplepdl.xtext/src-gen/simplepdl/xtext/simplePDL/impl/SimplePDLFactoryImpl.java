/**
 * generated by Xtext 2.36.0
 */
package simplepdl.xtext.simplePDL.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import simplepdl.xtext.simplePDL.ACResource;
import simplepdl.xtext.simplePDL.Guidance;
import simplepdl.xtext.simplePDL.ProcessElement;
import simplepdl.xtext.simplePDL.Resource;
import simplepdl.xtext.simplePDL.SimplePDLFactory;
import simplepdl.xtext.simplePDL.SimplePDLPackage;
import simplepdl.xtext.simplePDL.WorkDefinition;
import simplepdl.xtext.simplePDL.WorkSequence;
import simplepdl.xtext.simplePDL.WorkSequenceType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class SimplePDLFactoryImpl extends EFactoryImpl implements SimplePDLFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static SimplePDLFactory init()
  {
    try
    {
      SimplePDLFactory theSimplePDLFactory = (SimplePDLFactory)EPackage.Registry.INSTANCE.getEFactory(SimplePDLPackage.eNS_URI);
      if (theSimplePDLFactory != null)
      {
        return theSimplePDLFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new SimplePDLFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public SimplePDLFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case SimplePDLPackage.PROCESS: return createProcess();
      case SimplePDLPackage.PROCESS_ELEMENT: return createProcessElement();
      case SimplePDLPackage.GUIDANCE: return createGuidance();
      case SimplePDLPackage.WORK_DEFINITION: return createWorkDefinition();
      case SimplePDLPackage.WORK_SEQUENCE: return createWorkSequence();
      case SimplePDLPackage.RESOURCE: return createResource();
      case SimplePDLPackage.AC_RESOURCE: return createACResource();
      case SimplePDLPackage.WORK_SEQUENCE_TYPE: return createWorkSequenceType();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public simplepdl.xtext.simplePDL.Process createProcess()
  {
    ProcessImpl process = new ProcessImpl();
    return process;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ProcessElement createProcessElement()
  {
    ProcessElementImpl processElement = new ProcessElementImpl();
    return processElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Guidance createGuidance()
  {
    GuidanceImpl guidance = new GuidanceImpl();
    return guidance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkDefinition createWorkDefinition()
  {
    WorkDefinitionImpl workDefinition = new WorkDefinitionImpl();
    return workDefinition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkSequence createWorkSequence()
  {
    WorkSequenceImpl workSequence = new WorkSequenceImpl();
    return workSequence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Resource createResource()
  {
    ResourceImpl resource = new ResourceImpl();
    return resource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ACResource createACResource()
  {
    ACResourceImpl acResource = new ACResourceImpl();
    return acResource;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public WorkSequenceType createWorkSequenceType()
  {
    WorkSequenceTypeImpl workSequenceType = new WorkSequenceTypeImpl();
    return workSequenceType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SimplePDLPackage getSimplePDLPackage()
  {
    return (SimplePDLPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static SimplePDLPackage getPackage()
  {
    return SimplePDLPackage.eINSTANCE;
  }

} //SimplePDLFactoryImpl
